#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Linq_To_Sql_VS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="InfiniteDB")]
	public partial class LSCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblDepartment(tblDepartment instance);
    partial void UpdatetblDepartment(tblDepartment instance);
    partial void DeletetblDepartment(tblDepartment instance);
    partial void Inserttblemployee(tblemployee instance);
    partial void Updatetblemployee(tblemployee instance);
    partial void Deletetblemployee(tblemployee instance);
    #endregion
		
		public LSCDataContext() : 
				base(global::Linq_To_Sql_VS.Properties.Settings.Default.InfiniteDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LSCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LSCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LSCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LSCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblDepartment> tblDepartments
		{
			get
			{
				return this.GetTable<tblDepartment>();
			}
		}
		
		public System.Data.Linq.Table<tblemployee> tblemployees
		{
			get
			{
				return this.GetTable<tblemployee>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDepartment")]
	public partial class tblDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeptNo;
		
		private string _DeptName;
		
		private System.Nullable<double> _Budget;
		
		private string _Loc;
		
		private EntitySet<tblemployee> _tblemployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeptNoChanging(int value);
    partial void OnDeptNoChanged();
    partial void OnDeptNameChanging(string value);
    partial void OnDeptNameChanged();
    partial void OnBudgetChanging(System.Nullable<double> value);
    partial void OnBudgetChanged();
    partial void OnLocChanging(string value);
    partial void OnLocChanged();
    #endregion
		
		public tblDepartment()
		{
			this._tblemployees = new EntitySet<tblemployee>(new Action<tblemployee>(this.attach_tblemployees), new Action<tblemployee>(this.detach_tblemployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DeptNo
		{
			get
			{
				return this._DeptNo;
			}
			set
			{
				if ((this._DeptNo != value))
				{
					this.OnDeptNoChanging(value);
					this.SendPropertyChanging();
					this._DeptNo = value;
					this.SendPropertyChanged("DeptNo");
					this.OnDeptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string DeptName
		{
			get
			{
				return this._DeptName;
			}
			set
			{
				if ((this._DeptName != value))
				{
					this.OnDeptNameChanging(value);
					this.SendPropertyChanging();
					this._DeptName = value;
					this.SendPropertyChanged("DeptName");
					this.OnDeptNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Budget", DbType="Float")]
		public System.Nullable<double> Budget
		{
			get
			{
				return this._Budget;
			}
			set
			{
				if ((this._Budget != value))
				{
					this.OnBudgetChanging(value);
					this.SendPropertyChanging();
					this._Budget = value;
					this.SendPropertyChanged("Budget");
					this.OnBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loc", DbType="NVarChar(20)")]
		public string Loc
		{
			get
			{
				return this._Loc;
			}
			set
			{
				if ((this._Loc != value))
				{
					this.OnLocChanging(value);
					this.SendPropertyChanging();
					this._Loc = value;
					this.SendPropertyChanged("Loc");
					this.OnLocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDepartment_tblemployee", Storage="_tblemployees", ThisKey="DeptNo", OtherKey="DeptNo")]
		public EntitySet<tblemployee> tblemployees
		{
			get
			{
				return this._tblemployees;
			}
			set
			{
				this._tblemployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblemployees(tblemployee entity)
		{
			this.SendPropertyChanging();
			entity.tblDepartment = this;
		}
		
		private void detach_tblemployees(tblemployee entity)
		{
			this.SendPropertyChanging();
			entity.tblDepartment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblemployees")]
	public partial class tblemployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Empid;
		
		private string _Empname;
		
		private string _Gender;
		
		private System.Nullable<double> _Salary;
		
		private System.Nullable<int> _DeptNo;
		
		private string _Phoneno;
		
		private string _remarks;
		
		private EntityRef<tblDepartment> _tblDepartment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpidChanging(int value);
    partial void OnEmpidChanged();
    partial void OnEmpnameChanging(string value);
    partial void OnEmpnameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnSalaryChanging(System.Nullable<double> value);
    partial void OnSalaryChanged();
    partial void OnDeptNoChanging(System.Nullable<int> value);
    partial void OnDeptNoChanged();
    partial void OnPhonenoChanging(string value);
    partial void OnPhonenoChanged();
    partial void OnremarksChanging(string value);
    partial void OnremarksChanged();
    #endregion
		
		public tblemployee()
		{
			this._tblDepartment = default(EntityRef<tblDepartment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Empid
		{
			get
			{
				return this._Empid;
			}
			set
			{
				if ((this._Empid != value))
				{
					this.OnEmpidChanging(value);
					this.SendPropertyChanging();
					this._Empid = value;
					this.SendPropertyChanged("Empid");
					this.OnEmpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empname", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Empname
		{
			get
			{
				return this._Empname;
			}
			set
			{
				if ((this._Empname != value))
				{
					this.OnEmpnameChanging(value);
					this.SendPropertyChanging();
					this._Empname = value;
					this.SendPropertyChanged("Empname");
					this.OnEmpnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(7)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Float")]
		public System.Nullable<double> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptNo", DbType="Int")]
		public System.Nullable<int> DeptNo
		{
			get
			{
				return this._DeptNo;
			}
			set
			{
				if ((this._DeptNo != value))
				{
					if (this._tblDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeptNoChanging(value);
					this.SendPropertyChanging();
					this._DeptNo = value;
					this.SendPropertyChanged("DeptNo");
					this.OnDeptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phoneno", DbType="VarChar(10)")]
		public string Phoneno
		{
			get
			{
				return this._Phoneno;
			}
			set
			{
				if ((this._Phoneno != value))
				{
					this.OnPhonenoChanging(value);
					this.SendPropertyChanging();
					this._Phoneno = value;
					this.SendPropertyChanged("Phoneno");
					this.OnPhonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remarks", DbType="VarChar(MAX)")]
		public string remarks
		{
			get
			{
				return this._remarks;
			}
			set
			{
				if ((this._remarks != value))
				{
					this.OnremarksChanging(value);
					this.SendPropertyChanging();
					this._remarks = value;
					this.SendPropertyChanged("remarks");
					this.OnremarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDepartment_tblemployee", Storage="_tblDepartment", ThisKey="DeptNo", OtherKey="DeptNo", IsForeignKey=true)]
		public tblDepartment tblDepartment
		{
			get
			{
				return this._tblDepartment.Entity;
			}
			set
			{
				tblDepartment previousValue = this._tblDepartment.Entity;
				if (((previousValue != value) 
							|| (this._tblDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDepartment.Entity = null;
						previousValue.tblemployees.Remove(this);
					}
					this._tblDepartment.Entity = value;
					if ((value != null))
					{
						value.tblemployees.Add(this);
						this._DeptNo = value.DeptNo;
					}
					else
					{
						this._DeptNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblDepartment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
