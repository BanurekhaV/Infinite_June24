//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApi_EF.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InfiniteDBEntities : DbContext
    {
        public InfiniteDBEntities()
            : base("name=InfiniteDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductSale> ProductSales { get; set; }
        public virtual DbSet<tblDepartment> tblDepartments { get; set; }
        public virtual DbSet<tblemployee> tblemployees { get; set; }
        public virtual DbSet<empdetail> empdetails { get; set; }
        public virtual DbSet<ErrorLogger> ErrorLoggers { get; set; }
        public virtual DbSet<Sample1> Sample1 { get; set; }
        public virtual DbSet<utable1> utable1 { get; set; }
        public virtual DbSet<utable2> utable2 { get; set; }
    
        [DbFunction("InfiniteDBEntities", "fn_GetEmployeesbyGender")]
        public virtual IQueryable<fn_GetEmployeesbyGender_Result> fn_GetEmployeesbyGender(string gender)
        {
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetEmployeesbyGender_Result>("[InfiniteDBEntities].[fn_GetEmployeesbyGender](@gender)", genderParameter);
        }
    
        [DbFunction("InfiniteDBEntities", "fn_tablevalued")]
        public virtual IQueryable<fn_tablevalued_Result> fn_tablevalued(Nullable<int> deptid)
        {
            var deptidParameter = deptid.HasValue ?
                new ObjectParameter("deptid", deptid) :
                new ObjectParameter("deptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_tablevalued_Result>("[InfiniteDBEntities].[fn_tablevalued](@deptid)", deptidParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> Errorproc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Errorproc");
        }
    
        public virtual int ExLogger(string exmsg, string extype, string exsrc, string exurl)
        {
            var exmsgParameter = exmsg != null ?
                new ObjectParameter("exmsg", exmsg) :
                new ObjectParameter("exmsg", typeof(string));
    
            var extypeParameter = extype != null ?
                new ObjectParameter("extype", extype) :
                new ObjectParameter("extype", typeof(string));
    
            var exsrcParameter = exsrc != null ?
                new ObjectParameter("exsrc", exsrc) :
                new ObjectParameter("exsrc", typeof(string));
    
            var exurlParameter = exurl != null ?
                new ObjectParameter("exurl", exurl) :
                new ObjectParameter("exurl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExLogger", exmsgParameter, extypeParameter, exsrcParameter, exurlParameter);
        }
    
        public virtual ObjectResult<GetDeptName_Result> GetDeptName(Nullable<int> eid)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDeptName_Result>("GetDeptName", eidParameter);
        }
    
        public virtual int getsalary(string ename, ObjectParameter esal)
        {
            var enameParameter = ename != null ?
                new ObjectParameter("ename", ename) :
                new ObjectParameter("ename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getsalary", enameParameter, esal);
        }
    
        public virtual int Sales(Nullable<int> pid, Nullable<int> qty_to_sell)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var qty_to_sellParameter = qty_to_sell.HasValue ?
                new ObjectParameter("qty_to_sell", qty_to_sell) :
                new ObjectParameter("qty_to_sell", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sales", pidParameter, qty_to_sellParameter);
        }
    
        public virtual ObjectResult<sp_deleteemp_Result> sp_deleteemp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_deleteemp_Result>("sp_deleteemp");
        }
    
        public virtual ObjectResult<sp_deptdetails_Result> sp_deptdetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_deptdetails_Result>("sp_deptdetails");
        }
    
        public virtual int sp_Deptno(string loc)
        {
            var locParameter = loc != null ?
                new ObjectParameter("loc", loc) :
                new ObjectParameter("loc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Deptno", locParameter);
        }
    
        public virtual int sp_getLocation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getLocation");
        }
    
        public virtual ObjectResult<sp_Getproducts_Result> sp_Getproducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Getproducts_Result>("sp_Getproducts");
        }
    
        public virtual ObjectResult<string> sp_parameter1(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_parameter1", nameParameter);
        }
    
        public virtual int sp_Taxcalculator(Nullable<int> eid, ObjectParameter annualsal)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Taxcalculator", eidParameter, annualsal);
        }
    
        public virtual int sp_totalDept()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_totalDept");
        }
    
        public virtual int sp_updatesalary(Nullable<int> eid, Nullable<double> sal)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            var salParameter = sal.HasValue ?
                new ObjectParameter("sal", sal) :
                new ObjectParameter("sal", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updatesalary", eidParameter, salParameter);
        }
    
        public virtual ObjectResult<string> sp_welcome()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_welcome");
        }
    
        public virtual ObjectResult<spGetProductsByName_Result> spGetProductsByName(string prdname)
        {
            var prdnameParameter = prdname != null ?
                new ObjectParameter("prdname", prdname) :
                new ObjectParameter("prdname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetProductsByName_Result>("spGetProductsByName", prdnameParameter);
        }
    }
}
