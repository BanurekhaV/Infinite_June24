Creational Design Patterns : are patterns to design and develop applications where the expectation is to create and initialize the required objects, without exposing the logic for creation

  1. Factory Pattern : This pattern suggests to have a factory where the type of object required by the user is created and initialized

 2. Abstract Factory Pattern : As per GOF, this pattern provides a way to encapsulate a group of factories with a common theme without specifying their concrete classes (implementing class). 

 3. Singleton Pattern : This pattern ensures that only one instance of the singleton class is created through out the application
                        Provides global access point to that instance
                        Provides thread safety as it creates only one instance, preventing multiple instances due to multi threaded application
                        Singleton instance are initialized in a lazy manner, meaning it is created only on the first request, and not whne the application

Singleton Implementation :
    1. Private constructor for the singleton class
    2. Singleton classes are sealed
    3. private static variable that can hold the instance of the singleton(as per our demo - stobj)
    4. public static method or property that can return the instance of the singleton class  (as per our demo - GetInstance())

                        