Indexers : An indexer allows an object to be indexed such as an array. When we define an indexer for a class, this behaves similar to the virtual array.
           We can access the instance of the class using the array access operator '[]'

Declaration and behaviour of an indexer is to some extent similar to that of a property.
 Property                  vs                  Indexer
accessed using get and set accessors		Are also accessed using get and set accessors
Gets or Sets a specific data member		Gets or sets a particular value from the object instance
                                                  ( it breaks the instance data into smaller parts and indexes each part. and gets
                                                    or sets each part)
Are defined with a name				Are defined with a 'this' keyword

Types of Classes :
  1. Abstract Class - cannot be instantiated, but can be inherited. Eg abstract class classname
  2. Sealed Class - can be instantiated, but cannot be inherited. sealed class classname
  3. Static Class - cannot be instantiated and cannot be inherited. Should have only static members. Eg static class classname
  4. Partial Class - can be defined in multiple files/location to enable developers to work simultaneously and integrate their work without hassles

Abstract Class : is a class that contains at least one abstract method. May or may not have non abstract methods

Abstract Method : is a method that does not contain implementation and only declaration. It is the Derived class that implements the abstract methods of the abstract class

Person
{ name, age, address, phone, email

abstract void dowork();}

Doctor{ },  Engineer,  Lawyer, Actor
