Threads : A thread is defined as the execution path of a program
          Are a light weight processes
          The Thread that will be executed first in the entire process is called as Main Thread
          The Main Thread is created automatically when the execution of C# program begins
          The threads that are created using the Thread class are child threads of the main Thread
          Each thread defines a unique flow of control, and performs a particular job

Important Properties of a Thread:
    - CurrentThread
    - IsAlive
    - Name
    - ThreadState
    -IstHreadPoolThread
    -IsBackground
    -ManagedThreadID

Life Cycle of thread has the below state :
  
   - Unstarted
   - Runnable
   - Running
   - Not Runnable
   - Dead

Functionality of a thread:
  -Sleep
  -Join
  -Abort
  - Suspend
  - Resume
  - Start

Thread Synchronization : A mechanism that protects overlap of critical/sensitive data, by using the below techniques
   - Blocking
   - locks
   - join
   - signalling

Thread Pool : is a collection of threads that can be reused for some job/activity. We can get a thread from the pool, using one of the methods of the Thread class known as 'QueueUserWorkItem()'. This method tries to allocate a thread if available in the pool, else it will callback when available. Till such time application method will be queued.
   
